@page "/"

<PageTitle>Index</PageTitle>

<LineChart Width="720" Height="250" Source="source" BuildOption="BuildOption" />

<h6>Start</h6>
<div>
    <button @onclick="() => OnClickAddStart(TimeSpan.FromHours(-1))">-1h</button>
    <button @onclick="() => OnClickAddStart(TimeSpan.FromMinutes(-5))">-5m</button>
    <button @onclick="() => OnClickAddStart(TimeSpan.FromMinutes(-1))">-1m</button>
    <button @onclick="() => OnClickAddStart(TimeSpan.FromSeconds(-30))">-30s</button>
    <button @onclick="() => OnClickAddStart(TimeSpan.FromSeconds(30))">+30s</button>
    <button @onclick="() => OnClickAddStart(TimeSpan.FromMinutes(1))">+1m</button>
    <button @onclick="() => OnClickAddStart(TimeSpan.FromMinutes(5))">+5m</button>
    <button @onclick="() => OnClickAddStart(TimeSpan.FromHours(1))">+1h</button>
    <button @onclick="() => OnClickSetStart(DateTime.Today)">Today</button>
    <button @onclick="() => OnClickSetStart(DateTime.Now)">Now</button>
</div>

<h6>Size</h6>
<div>
    <button @onclick="() => OnClickAddSize(-60)">-60</button>
    <button @onclick="() => OnClickAddSize(-5)">-5</button>
    <button @onclick="() => OnClickAddSize(-1)">-1</button>
    <button @onclick="() => OnClickAddSize(1)">+1</button>
    <button @onclick="() => OnClickAddSize(5)">+5</button>
    <button @onclick="() => OnClickAddSize(60)">+60</button>
    <button @onclick="() => OnClickSetSize(5)">5</button>
    <button @onclick="() => OnClickSetSize(60)">60</button>
    <button @onclick="() => OnClickSetSize(1440)">1440</button>
</div>

@code {

    private static readonly ChartBuildOption BuildOption = new()
    {
        Label1 = "Unit1",
        Label2 = "Unit2",
        Value1Format = "F1",
        Value2Format = "F0",
        Value2AxisCalculator = _ => 20
    };

    private DateTime start = DateTime.Today;

    private int size = 1440;

    private ChartSource<Data>? source;

    protected override void OnInitialized()
    {
        Update();
    }

    private void OnClickAddStart(TimeSpan value)
    {
        start += value;
        Update();
    }

    private void OnClickSetStart(DateTime value)
    {
        start = value;
        Update();
    }

    private void OnClickAddSize(int value)
    {
        size = Math.Min(1440, Math.Max(0, value + size));
        Update();
    }

    private void OnClickSetSize(int value)
    {
        size = value;
        Update();
    }

    private void Update()
    {
        var isDayData = size == 1440;
        var list = MakeDataList();
        source = new ChartSource<Data>(
            list,
            minDateTime: isDayData ? list[0].Timestamp.TruncateSecond() : null,
            maxDateTime: isDayData ? list[^1].Timestamp.TruncateSecond().AddMinutes(1) : null,
            maxValue2: 100);
        source.TimeSelector = x => x.Timestamp;
        source.Value1Selectors.Add(x => x.Value1);
        source.Value1Selectors.Add(x => x.Value2);
        source.Value2Selectors.Add(x => x.Value3 * 100);
        source.ThresholdSelectors.Add(x => x.Threshold11);
        source.ThresholdSelectors.Add(x => x.Threshold12);
        source.ThresholdSelectors.Add(x => x.Threshold21);
        source.Legends.Add(new LegendEntry("Value1", "Warning1", "Critical1"));
        source.Legends.Add(new LegendEntry("Value2", "Warning2"));
        source.Legends.Add(new LegendEntry("Value3"));
    }

#pragma warning disable CA5394
    private List<Data> MakeDataList()
    {
        var rand = new Random();
        return Enumerable.Range(0, size)
            .Select(x =>
            {
                var timestamp = start.AddMinutes(-size + x);
                return new Data
                {
                    Timestamp = timestamp,
                    Value1 = 90 + rand.Next(20),
                    Value2 = 190 + rand.Next(20),
                    Value3 = (x % 101) * 0.01,
                    Threshold11 = timestamp.TimeOfDay < TimeSpan.FromHours(12) ? 100 : 110,
                    Threshold12 = timestamp.TimeOfDay < TimeSpan.FromHours(12) ? 200 : 210,
                    Threshold21 = 50
                };
            })
            .ToList();
    }
#pragma warning restore CA5394

    public class Data
    {
        public DateTime Timestamp { get; set; }

        public double? Value1 { get; set; }

        public double? Value2 { get; set; }

        public double? Value3 { get; set; }

        public double Threshold11 { get; set; }

        public double Threshold12 { get; set; }

        public double Threshold21 { get; set; }
    }
}

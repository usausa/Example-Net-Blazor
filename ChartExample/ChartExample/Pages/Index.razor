@page "/"

<PageTitle>Index</PageTitle>

<LineChart Width="840" Height="340" Source="source" BuildOption="BuildOption" />

<hr />
<button @onclick="OnClick1">Button1</button>
<button @onclick="OnClick2">Button2</button>

@code {

    private static readonly ChartBuildOption BuildOption = new()
    {
        Label1 = "Unit1",
        Label2 = "Unit2",
        Value1Format = "F1",
        Value2Format = "F0",
        Value2AxisCalculator = _ => 20
    };

    private DateTime start = DateTime.Today;

    private ChartSource<Data>? source;

    protected override void OnInitialized()
    {
        UpdateList1(MakeDataPattern1(DateTime.Today, 1440));
    }

    private void OnClick1()
    {
        start = start.AddMinutes(1);
        UpdateList1(MakeDataPattern1(start, 1440));
    }

    private void OnClick2()
    {
        start = start.AddMinutes(-1);
        UpdateList1(MakeDataPattern1(start, 1440));
    }

    private void UpdateList1(List<Data> list)
    {
        source = new ChartSource<Data>(list, maxValue2: 100);
        source.ValueLegends.Add("Value1");
        source.ValueLegends.Add("Value2");
        source.ValueLegends.Add("Value3");
        source.ThresholdLegends.Add("Warning1");
        source.ThresholdLegends.Add("Warning2");
        source.TimeSelector = x => x.Timestamp;
        source.Value1Selectors.Add(x => x.Value1);
        source.Value1Selectors.Add(x => x.Value2);
        source.Value2Selectors.Add(x => x.Value3 * 100);
        source.Threshold1Selectors.Add(x => x.Threshold1);
        source.Threshold1Selectors.Add(x => x.Threshold2);
    }

#pragma warning disable CA5394
    private static List<Data> MakeDataPattern1(DateTime end, int size)
    {
        var rand = new Random();
        return Enumerable.Range(0, size)
            .Select(x =>
            {
                var timestamp = end.AddMinutes(-size + x);
                return new Data
                {
                    Timestamp = timestamp,
                    Value1 = 90 + rand.Next(20),
                    Value2 = 190 + rand.Next(20),
                    Value3 = (x % 101) * 0.01,
                    Threshold1 = timestamp.TimeOfDay < TimeSpan.FromHours(12) ? 100 : 110,
                    Threshold2 = timestamp.TimeOfDay < TimeSpan.FromHours(12) ? 200 : 210
                };
            })
            .ToList();
    }
#pragma warning restore CA5394

    public class Data
    {
        public DateTime Timestamp { get; set; }

        public double? Value1 { get; set; }

        public double? Value2 { get; set; }

        public double? Value3 { get; set; }

        public double Threshold1 { get; set; }

        public double Threshold2 { get; set; }
    }
}

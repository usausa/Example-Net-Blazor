@page "/login"
@layout SimpleLayout
@inject NavigationManager NavigationManager
@inject CustomAuthenticationStateProvider AuthenticationStateProvider

<PageTitle>Login</PageTitle>

<div class="col-md-6 offset-md-3 mt-5">
    <div class="card">
        <h4 class="card-header">Login</h4>
        <div class="card-body">
            <EditForm Model="@form" OnValidSubmit="Submit">
                <DataAnnotationsValidator />
                <CustomValidator @ref="customValidator" />
                <ValidationSummary />

                <div class="mb-3">
                    <label class="form-label">Username</label>
                    <InputText @bind-Value="form.Username" class="form-control"/>
                </div>
                <div class="mb-3">
                    <label class="form-label">Password</label>
                    <InputText @bind-Value="form.Password" type="password" class="form-control" />
                </div>

                <button type="submit" class="btn btn-primary">Login</button>
            </EditForm>

        </div>
    </div>
</div>

@code {
    private readonly LoginForm form = new();

    private CustomValidator customValidator = default!;

    private async Task Submit()
    {
        customValidator.ClearErrors();

        if (await AuthenticationStateProvider.LoginAsync(form.Username, form.Password))
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            var errors = new Dictionary<string, List<string>>
            {
                { nameof(form.Username), new() { "Login failed." } }
            };
            customValidator.DisplayErrors(errors);
        }
    }
}
